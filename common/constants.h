// *********************************************************************************************************************
// *                                                    Константы.                                                     *
// *                                                                                                                   *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                        Created 02 may 2020 at 10:30 *
// *********************************************************************************************************************
#pragma once
namespace xenon {

    const double PI = 3.1415926535897932384626433832795028841971693993751;
    // Сильно большая константа, используется, когда ищем минимум.
    const double FAR_AWAY = (double) size_t(-1);

    // Скорость выталкивания, метров в секунду.
    // Отрицательная, потому как выталкивается-то - назад.
    const float PUSH_BACK_SPEED = -0.8;

    // Скорость при "медленной и аккуратной" рулежке, например, при заходе на стоянку.
    const float TAXI_SLOW_SPEED = 2.77778; // 10 км/ч

    // Скорость при "нормальной" рулежке.
    const float TAXI_NORMAL_SPEED = 5.55556; // 20 км/x

    // Изменение курса самолета за секунду при рулении (скорость углового вращения).
    const float TAXI_HEADING_SHIFT_PER_SECOND = 2.0;

    // Радиус поворота при рулении. Точнее, это расстояние по прямой
    // до целевой рулежной дорожки, когда начинается поворот.
    // Конкретно "радиус" будет формироваться - скоростью движения
    // самолета + скоростью углового вращения.
    const float TAXI_TURN_RADIUS = 22.0;

    // Ускорение при старте руления или остановке.
    const float TAXI_ACCELERATION = 0.03;

    // Время подъема/опускания стоек шасси.
    constexpr float TIME_FOR_GEAR_MOTION        = 10.0;


    /**
     * @short Использование ВПП.
     */
    enum runway_used_t {
        RUNWAY_USED_BOTH = 0,
        RUNWAY_USED_DEPARTURE,
        RUNWAY_USED_ARRIVAL
    };

//    /**
//     * @short Направление движения хвоста при выталкивании.
//     */
//
//    enum push_back_tail_direction_t {
//        PB_TAIL_STRAIGHT = 0,
//        PB_TAIL_TO_LEFT,
//        PB_TAIL_TO_RIGHT
//    };


    // Битовые константы включения или выключения света.

}; // namespace xenon