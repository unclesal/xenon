// *********************************************************************************************************************
// *                        Класс, который может чего-нибудь устанавливать - внутри симулятора X-Plane.                *
// *                                                                                                                   *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                        Created 24 sep 2019 at 02:52 *
// *********************************************************************************************************************

#include "abstract_observed_object.h"

using namespace xenon;

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                                      Конструктор                                                  *
// *                                                                                                                   *
// *********************************************************************************************************************

AbstractObservedObject::AbstractObservedObject() {
    _x_dataref = nullptr;
    _y_dataref = nullptr;
    _z_dataref = nullptr;
}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                              Конструктор копирования                                              *
// *                                                                                                                   *
// *********************************************************************************************************************
/*
AbstractObservedObject::AbstractObservedObject( const AbstractObservedObject & aoo )
    : AbstractObservedObject()
{
    _x_dataref = aoo._x_dataref;
    _y_dataref = aoo._y_dataref;
    _z_dataref = aoo._z_dataref;
}
*/

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                   Установить внутри-игровую позицию объекта.                                      *
// *                                                                                                                   *
// *********************************************************************************************************************
/*
void AbstractObservedObject::set_position( position_t & position ) {

    if ( ( _x_dataref ) && ( _y_dataref ) && ( _z_dataref ) ) {
        XPLMSetDatad( _x_dataref, position.x );
        XPLMSetDatad( _y_dataref, position.y );
        XPLMSetDatad( _z_dataref, position.z );
    }

}
*/

// *********************************************************************************************************************
// *                                                                                                                   *
// *                              Пустая (в данном классе) функция управления объектом                                 *
// *                                                                                                                   *
// *********************************************************************************************************************
/*
void AbstractObservedObject::control( float elapsed_since_last_call ) {

}
*/
// *********************************************************************************************************************
// *                                                                                                                   *
// *                                          Установка целочисленного значения                                        *
// *                                                                                                                   *
// *********************************************************************************************************************
/*
void AbstractObservedObject::_set_as_int( CommandSet & cmd, XPLMDataRef ref ) {
    
    if ( ref ) {
        int value = cmd.i_value();
        XPLMSetDatai( ref, value );
    }
}
*/
// *********************************************************************************************************************
// *                                                                                                                   *
// *                                         Установка вещественного значения                                          *
// *                                                                                                                   *
// *********************************************************************************************************************
/*
void AbstractObservedObject::_set_as_float( CommandSet & cmd, XPLMDataRef ref ) {
    
    if ( ref ) {
        float value = cmd.f_value();
        XPLMSetDataf( ref, value );
    }
}
*/