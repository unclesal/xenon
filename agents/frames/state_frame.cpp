// *********************************************************************************************************************
// *                       Фрейм, имеющий отношение к определенному состоянию (узел графа) самолета                    *
// *                                                                                                                   *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                        Created 07 jul 2020 at 11:53 *
// *********************************************************************************************************************

#include "state_frame.h"
using namespace xenon;

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                                    Конструктор                                                    *
// *                                                                                                                   *
// *********************************************************************************************************************

StateFrame::StateFrame(BimboAircraft * bimbo, ConnectedCommunicatorReactor * environment ) 
    : AbstractFrame()
{
    _environment = environment;
    _ptr_acf = bimbo;
        
    _next_action.action = ACF_DOES_NOTHING;
};

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                                Результат фрейма                                                   *
// *                                                                                                                   *
// *********************************************************************************************************************

void StateFrame::result( next_action_t & next_action ) {
    next_action = _next_action;
}
