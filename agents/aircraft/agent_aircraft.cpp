// *********************************************************************************************************************
// *                                              Реализация агента самолета                                           *
// *                                                                                                                   *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                        Created 27 may 2020 at 08:49 *
// *********************************************************************************************************************
#include "agent_aircraft.h"

using namespace xenon;
using namespace std;

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                                     Конструктор                                                   *
// *                                                                                                                   *
// *********************************************************************************************************************

AgentAircraft::AgentAircraft ( const std::string & uuid )
    : AbstractAgent( uuid, AGENT_AIRCRAFT ) {
}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                           Метод выполнения агента самолета                                        *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::run() {
    
    for (;;) {
        sleep(5);        
    }

}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                        Установлено соединение с коммуникатором                                    *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::on_connect() {

    cout << "AgentAircraft connected!" << endl;
    location_t location;
    location.latitude=56.749406;
    location.longitude=60.797907;
    CmdHello * hello = new CmdHello( location );
    _communicator->request( hello );

}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                      Соединение с коммуникатором было разорвано                                   *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::on_disconnect() {
    cout << "Communicator was disconnected..." << endl;
}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                  При попытке работы с сетью были получены ошибки                                  *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::on_error( std::string message ) {
    cout << "Network error: " << message << endl;
}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                          Из сети была получена команда                                            *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::on_received( AbstractCommand * cmd ) {
    cout << "Got command: " << cmd->command_name() << endl;
};


