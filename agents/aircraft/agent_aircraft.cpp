// *********************************************************************************************************************
// *                                              Реализация агента самолета                                           *
// *                                                                                                                   *
// * Eugene G. Sysoletin <e.g.sysoletin@gmail.com>                                        Created 27 may 2020 at 08:49 *
// *********************************************************************************************************************
#include "agent_aircraft.h"
#include "tested_agents.h"

using namespace xenon;
using namespace std;

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                                     Конструктор                                                   *
// *                                                                                                                   *
// *********************************************************************************************************************

AgentAircraft::AgentAircraft ( const std::string & uuid )
    : AbstractAgent( uuid, AGENT_AIRCRAFT ) {

    if ( uuid == BOEING_1 ) {        
        
        __ptr_acf = new BimboAircraft("B738", "AFF", "AFF");

        _communicator->set_agent_name("Boeing 738");
        
        if ( ! Airport::airports_was_readed() ) {
            cerr << "Airports was not readed, exit." << endl;
            return;        
        } else {
        
        }
    }
    
    if ( ! __ptr_acf ) Logger::log("AgentAircraft::AgentAircraft() UUID " + uuid + " not handled");
    
}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                           Метод выполнения агента самолета                                        *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::run() {
     
    if ( ! __ptr_acf ) {
        cerr << "AgentAircraft::run(): acf pointer is none. Exit." << endl;
        return;
    }
    
    for (;;) {
        sleep(100);
        __step();
    }

}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                        Установлено соединение с коммуникатором                                    *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::on_connect() {

    cout << "AgentAircraft connected!" << endl;
    if ( __ptr_acf ) {
        CmdHello * hello = new CmdHello( __ptr_acf->get_location() );
        _communicator->request( hello );
    }

}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                                  Один "шаг"                                                       *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::__step() {
}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                      Соединение с коммуникатором было разорвано                                   *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::on_disconnect() {
    cout << "Communicator was disconnected..." << endl;
}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                  При попытке работы с сетью были получены ошибки                                  *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::on_error( std::string message ) {
    cout << "Network error: " << message << endl;
}

// *********************************************************************************************************************
// *                                                                                                                   *
// *                                          Из сети была получена команда                                            *
// *                                                                                                                   *
// *********************************************************************************************************************

void AgentAircraft::on_received( AbstractCommand * cmd ) {
    cout << "Got command: " << cmd->command_name() << endl;
};


